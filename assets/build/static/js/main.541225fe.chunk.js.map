{"version":3,"sources":["components/GIF/styles.module.scss","components/GIF/index.js","components/Grid/index.js","components/Home/index.js","components/Search/index.js","config/api.js","util/api.js","components/App/index.js","serviceWorker.js","index.js","components/Home/styles.module.scss"],"names":["module","exports","image","GIF","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","play","_this2","_this$props","_this$props$image","id","caption","_this$props$image$ima","images","original","original_still","upVote","downVote","react_default","a","createElement","className","styles","onMouseEnter","setState","onMouseLeave","alt","src","url","title","onClick","xlinkHref","Component","Home","sort","b","aScore","rank","up_votes","down_votes","bScore","import_datetime","map","i","components_GIF","key","page","_this$props$data","data","query","_this$props$data$pagi","pagination","offset","count","renderGrid","_this$props2","_this$props2$data$pag","total_count","canPage","Fragment","Grid","disabled","toggleSearch","main","search","Search","handleChange","e","value","target","handleSubmit","preventDefault","isOpen","input","focus","searchStyle","toggle","onSubmit","onChange","ref","name","type","placeholder","autoComplete","autoCorrect","autoCapitalize","spellCheck","baseUrl","headers","Content-Type","X-Giffy-Token","Math","floor","random","getGIFs","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","json","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","concat","sent","abrupt","objectSpread","stop","_x","apply","_ref2","_callee2","_context2","method","_x2","_ref3","_callee3","_context3","_x3","App","searchOpen","handleSearch","gifs","newGifs","result","toConsumableArray","handleUpVote","updatedGifs","handleDownVote","_this$state","frameStyle","components_Home","components_Search","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.541225fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"styles_image__2h23P\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.scss';\n\nclass GIF extends Component {\n  static propTypes = {\n    image: PropTypes.object,\n    upVote: PropTypes.func,\n    downVote: PropTypes.func,\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false\n    }\n  }\n\n  render() {\n    const { \n      image: { id, caption, images: { original, original_still }}, \n      upVote, \n      downVote,\n    } = this.props;\n    const { play } = this.state;\n    return (\n      <div \n        className={styles.image}\n        onMouseEnter={() => this.setState({ play: true })}\n        onMouseLeave={() => this.setState({ play: false })} \n      >\n        <img \n          alt={caption}\n          src={play ? original.url : original_still.url}\n        />\n        <span>\n          <button title=\"Up Vote\" onClick={() => upVote(id)} ><svg><use xlinkHref=\"#icon-plus\" /></svg></button>\n          <button title=\"Down Vote\" onClick={() => downVote(id)} ><svg><use xlinkHref=\"#icon-minus\" /></svg></button>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default GIF;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport GIF from '../GIF';\nimport './styles.scss';\n\nclass Home extends Component {\n  static propTypes = {\n    images: PropTypes.array,\n    upVote: PropTypes.func,\n    downVote: PropTypes.func,\n  }\n\n  render() {\n    const { images, downVote, upVote } = this.props;\n    return (\n      <main className=\"grid\">\n        {images.sort((a, b) => {\n          const aScore = (a.rank.up_votes - a.rank.down_votes);\n          const bScore = (b.rank.up_votes - b.rank.down_votes);\n          if (aScore > bScore) return -1;\n          if (aScore < bScore) return 1;\n          if (a.import_datetime < b.import_datetime) return -1;\n          if (a.import_datetime > b.import_datetime) return 1;\n          return 0;\n        }).map(i => <GIF key={i.id} upVote={upVote} downVote={downVote} image={i} />)}\n      </main>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '../Grid';\nimport styles from './styles.module.scss';\n\nclass Home extends Component {\n  static propTypes = {\n    page: PropTypes.func,\n    data: PropTypes.object,\n    toggleSearch: PropTypes.func,\n    upVote: PropTypes.func,\n    downVote: PropTypes.func, // should have used the context API\n  }\n\n  page = () => {\n    const { page, data: { query, pagination: { offset, count }} } = this.props;\n    page(query, offset + count);\n  };\n\n  renderGrid = () => {\n    if (!this.props.data.data) return null;\n    const { \n      data: { data: images }, \n      data: { pagination: { count, total_count } }, \n      upVote, \n      downVote \n    } = this.props;\n    const canPage = count < total_count;\n    return (\n      <>\n        <Grid images={images} upVote={upVote} downVote={downVote} />\n        <button disabled={!canPage} onClick={this.page}>Load More</button>\n      </>\n    );\n  };\n\n  render() {\n    const { toggleSearch } = this.props;\n    return (\n      <main className={styles.main}>\n        <span className={styles.search} onClick={toggleSearch} ><svg><use xlinkHref=\"#icon-search\"/></svg></span>\n        {this.renderGrid()}\n      </main>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Search extends Component {\n  static propTypes = {\n    isOpen: PropTypes.bool,\n    toggle: PropTypes.func,\n    search: PropTypes.func,\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n  }\n\n  componentDidUpdate() {\n    const { isOpen } = this.props;\n    if (isOpen) this.input.focus();\n  }\n\n  handleChange = (e) => this.setState({value: e.target.value});\n\n  handleSubmit = e => {\n    const { search } = this.props;\n    const { value } = this.state;\n    e.preventDefault();\n    search(value);\n  }\n\n  render() {\n    const { isOpen, toggle } = this.props;\n    const searchStyle = isOpen ? \"search\" : \"search close\";\n    return (\n      <div className={searchStyle}>\n        <form onSubmit={this.handleSubmit}>\n          <input \n            onChange={this.handleChange}\n            ref={input => (this.input = input)}\n            name=\"search\" \n            type=\"search\" \n            placeholder=\"Giffy...\" \n            autoComplete=\"off\" \n            autoCorrect=\"off\"\n            autoCapitalize=\"off\" \n            spellCheck=\"false\" \n          />\n          <span>Hit enter to search</span>\n        </form>\n      </div>\n    );\n  }\n}\n\n\n\nexport default Search;\n","const baseUrl = \"http://localhost:3000/api/v1\";\n\nexport { baseUrl };","import { baseUrl } from '../config/api';\n\n// Assumtion: user is already logged in\nconst authToken = Math.floor(Math.random() * 10000 + 1);\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  \"X-Giffy-Token\": authToken\n};\n\nconst getGIFs = async (query, offset = 0) => {\n  const response = await fetch(`${baseUrl}/gifs?q=${query}&offset=${offset}`, { headers });\n  const json = await response.json();\n  return { ...json, query };\n};\n\nconst upVote = async (id) => {\n  const response = await fetch(`${baseUrl}/gifs/${id}/upvote`, { headers, method: \"PUT\" });\n  return response.json();\n};\n  \n\nconst downVote = async (id) => {\n  const response = await fetch(`${baseUrl}/gifs/${id}/downvote`, { headers, method: \"PUT\" });\n  return response.json();\n}\n\nexport {\n  getGIFs,\n  upVote,\n  downVote,\n};","import React, { Component } from 'react';\nimport './App.scss';\nimport Home from '../Home';\nimport Search from '../Search';\nimport { getGIFs, upVote, downVote } from '../../util/api';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      searchOpen: false,\n      gifs: {},\n    };\n  }\n  \n  componentDidMount() {\n    this.toggleSearch();\n  }\n  \n  toggleSearch = () => {\n    const { searchOpen } = this.state;\n    this.setState({ searchOpen: !searchOpen });\n  }\n  \n  handleSearch = async (value, offset = 0) => {\n    const { gifs } = this.state;\n    const newGifs = await getGIFs(value, offset);\n    if (gifs.query === value) {\n      const result = { ...gifs };\n      result.data = [ ...result.data, ...newGifs.data ];\n      result.pagination = newGifs.pagination;\n      this.setState({ gifs: result, searchOpen: false });\n    } else {\n      this.setState({ gifs: newGifs, searchOpen: false });\n    } \n  }\n\n  handleUpVote = (id) => {\n    upVote(id);\n    const { gifs } = this.state;\n    const updatedGifs = { ...gifs };\n    // should have included a limit in the API so I could get the real ranks\n    for (let i = 0; i < updatedGifs.data.length; i++) {\n      if (updatedGifs.data[i].id === id) {\n        updatedGifs.data[i].rank.up_votes += 1;\n        break;\n      }\n    }\n    this.setState({ gifs: updatedGifs });\n  };\n\n  handleDownVote = (id) => {\n    downVote(id);\n    const { gifs } = this.state;\n    const updatedGifs = { ...gifs };\n    for (let i = 0; i < updatedGifs.data.length; i++) {\n      if (updatedGifs.data[i].id === id) {\n        updatedGifs.data[i].rank.down_votes += 1;\n        break;\n      }\n    }\n    this.setState({ gifs: updatedGifs });\n  };\n  \n  render() {\n    const { searchOpen, gifs } = this.state;\n    const frameStyle = searchOpen ? \"frame move\" : \"frame\";\n    return (\n      <div className=\"App\">\n      {/* GIF Frames for search screen */}\n      <div className={frameStyle}></div>\n      <div className={frameStyle}></div>\n      <div className={frameStyle}></div>\n      <div className={frameStyle}></div>\n      <div className={frameStyle}>\n      <Home \n        page={this.handleSearch} \n        data={gifs} \n        upVote={this.handleUpVote} \n        downVote={this.handleDownVote} \n        toggleSearch={this.toggleSearch}\n      />\n      </div>\n      <Search \n        search={this.handleSearch} \n        isOpen={searchOpen} \n        toggle={this.toggleSearch} \n      />\n      </div>\n      );\n    }\n  }\n  \n  export default App;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3kVuD\",\"search\":\"styles_search__p7U5e\"};"],"sourceRoot":""}